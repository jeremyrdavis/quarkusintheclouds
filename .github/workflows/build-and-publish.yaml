name: Build and Publish

on:
  workflow_call:
    inputs:
      project-directory:
        required: true
        type: string

jobs:
  build-and-publish:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: "temurin"
          java-version: "21"

      - name: Build with Maven
        working-directory: ${{ inputs.project-directory }}
        run: mvn clean package

      - name: Get artifact id from pom.xml
        id: get_artifact_id
        working-directory: ${{ inputs.project-directory }}
        run: echo "artifact_id=$(mvn help:evaluate -Dexpression=project.artifactId -q -DforceStdout)" >> $GITHUB_OUTPUT

      - name: Get version from pom.xml
        id: get_version
        working-directory: ${{ inputs.project-directory }}
        run: echo "version=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)" >> $GITHUB_OUTPUT

      - name: Print extracted values
        run: |
          echo "Artifact ID: ${{ steps.get_artifact_id.outputs.artifact_id }}"
          echo "Version: ${{ steps.get_version.outputs.version }}"

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Docker image
        working-directory: ${{ inputs.project-directory }}
        run: |
          docker build --file src/main/docker/Dockerfile.jvm \
            -t ${{ secrets.DOCKERHUB_USERNAME }}/${{ steps.get_artifact_id.outputs.artifact_id }}:${{ steps.get_version.outputs.version }} \
            -t ${{ secrets.DOCKERHUB_USERNAME }}/${{ steps.get_artifact_id.outputs.artifact_id }}:latest \
            .

            echo ${{ secrets.DOCKERHUB_TOKEN }} | docker login -u ${{ secrets.DOCKERHUB_USERNAME }} --password-stdin
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/${{ steps.get_artifact_id.outputs.artifact_id }}:${{ steps.get_version.outputs.version }}
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/${{ steps.get_artifact_id.outputs.artifact_id }}:latest
