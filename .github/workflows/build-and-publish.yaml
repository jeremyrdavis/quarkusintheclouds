name: Build and Publish

on:
  workflow_call:
    inputs:
      project-directory:
        required: true
        type: string

jobs:
  build-and-publish:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: "temurin"
          java-version: "21"

      - name: Build with Maven
        working-directory: ${{ inputs.project-directory }}
        run: mvn clean package

      - name: Get artifact id from pom.xml
        id: get_artifact_id
        run: echo "POM_ARTIFACT=$(mvn help:evaluate -Dexpression=project.artifactId -q -DforceStdout)"  >> $GITHUB_OUTPUT

      - name: Get version from pom.xml
        id: get_version
        run: echo "POM_VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)" >> $GITHUB_OUTPUT

      - name: Print GITHUB_OUTPUT
        run: |
          echo "POM_ARTIFACT=${{ steps.get_artifact_id.POM_ARTIFACT }}"
          echo "POM_VERSION=${{ steps.get_version.POM_VERSION }}"
          echo $GITHUB_OUTPUT

      - name: Print version
        run: echo ${{ secrets.DOCKERHUB_USERNAME }}"/${POM_ARTIFACT}:${POM_VERSION}"

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Build Docker image
        run: |
          cd ${{ inputs.project-directory }}
          docker build --file src/main/docker/Dockerfile.jvm \
            -t ${{ secrets.DOCKERHUB_USERNAME }}/${{ steps.get_artifact_id.POM_ARTIFACT }}:${{ steps.get_version.POM_VERSION }} . \
            ${{ secrets.DOCKERHUB_USERNAME }}/${{ steps.get_version.POM_ARTIFACT }}:latest . \

      - name: Push Docker image
        run: |
          echo ${{ secrets.DOCKERHUB_TOKEN }} | docker login -u ${{ secrets.DOCKERHUB_USERNAME }} --password-stdin
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/${POM_ARTIFACT}:${POM_VERSION}
